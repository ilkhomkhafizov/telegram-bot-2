import config
from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Updater, MessageHandler, CommandHandler, Filters, CallbackQueryHandler

CALLBACK_GOOD = "good"
CALLBACK_BAD = "bad"

GOOD_STICKER = "CAACAgIAAxkBAAKUQl67WPvSta0psD3SKI5cEZgY9A00AAIxAAPBnGAMxg4yoItadaUZBA"
questions = [
    "1.	Определена ли целевая аудитория?",
    "2.	Какую информацию предоставлять потребителю?",
    "3.	В каких социальных сетях будет разворачиваться ваш контент-план?",
    "4.	В какое время ваша ЦА чаще всего находится в сети?",
    "5.	Почему важен анализ конкурентов?",
    "6.	Подсказать полезные инструменты для продвижения?",
    "7.	Знаете, как составить контент-план?",
    "8.	Давайте оптимизируем Ваш контент",
    "9.	Вы успешно общаетесь с аудиторией?",
    "10. Эффективно ли ваше продвижение?"
]
answers = [
    """Чтобы определить ЦА необходимо ответить на следующие вопросы:
        • Кто является Вашей целевой аудиторией?
        Нужно четко понимать, для кого вы создаете свой проект, кем он будет востребован.
        • Какую информацию необходимо предоставить потребителю, который планирует купить ваш продукт? 
        Чтобы более точно определить тип контента и то, как будет выглядеть рекламная компания, нужно знать, что привлекает Вашего потребителя, его образ мышления, его привычки.
        • Какие социальные сети среди ваших клиентов пользуются интересом, и в каких сетях они проводят больше всего времени?
        Ответ на этот вопрос вытекает из ответов на предыдущие вопросы. Данный ответ при определении целевой аудитории помогает отсечь растрату ненужных ресурсов.
        • В какое время Ваша целевая аудитория чаще всего находится в сети?
        Этот вопрос помогает спланировать время обновления контента, чтобы аудитория всегда своевременно узнавала новую информацию о продукте.
        """,

        "Ваш контент должен полностью отображать концепцию вашего проекта. Это может быть любой контент: фото, видео, музыка, текст. Либо любые их комбинации, в зависимости от возможностей выбранной площадки.",

        "даем список социальных сетей с их преимуществами",

        "Этот вопрос помогает спланировать время обновления контента, чтобы аудитория всегда своевременно узнавала новую информацию о продукте.",

        "Важно понимать, что создаваемый продукт – не единственный и не самый уникальный на рынке. Очень сложно попасть в условия монополии. Поэтому вы должны знать о конкуренции, об их достижениях в данной области, о том, каким путем они развиваются. На основе анализа групп конкурентов можно разработать свой контент-план с уникальным предложением."
            "С помощью таких инструментов как Церебро или Таргет Хантер вы можете проанализировать уже раскрученную группу конкурентов и увидеть активных пользователей. Например, в Target Hunter есть вкладка «Анализ сообщества», которая позволяет собирать полезную информацию, находить активных участников и так далее."
            "После анализа конкурентов, вы можете найти в своем проекте уникальную особенность, которая отличит вас от них, будет привлекать потребителя, сделает бренд более узнаваемым. И на основе собранных данных вы сможете составить уникальное торговое предложение, которое заинтересует целевую аудиторию.",

        "Тоже скину НИР, где это есть",

        """• Контент не должен быть однотипным. Он не должен состоять из одних только текстов или только лишь из графических изображений. Это должно быть грамотное чередование того и другого, их квинтэссенция. За однотипным контентом вскоре перестанут следить, он не будет привлекать внимания, из-за чего снизятся охваты. В современных условиях популярность набирает так же видео-контент. Поэтому и его так же по возможности необходимо включать в свой план.
            • Мотивация пользователей создавать собственный контент. Это может быть как побуждение к комментированию поста, призыв к беседе, так и создание репостов, побуждение желания поделиться информацией с друзьями. Или своего рода вирусный маркетинг: побуждение к спору или конкурсу, где пользователи будут обсуждать тот или иной проект уже на своих страничках социальных сетей.""",

        """В контенте должна прослеживаться определенная логика, одно должно вытекать из другого. Каждый кусочек контента так или иначе должен сочетаться с другим. Так контент будет более привлекателен пользователю.
            Так же пользователя можно привлечь «кликбейтным» заголовком. Это должно быть что-то броское, но обязательно отображающее суть происходящего.
            Чтобы обеспечить индексацию ваших статей в поисковых системах «Яндекс» и «Google», используются ключевые слова, хэштеги.
            При наличии официального сайта, на нем можно использовать виджеты. А в описании блога, публичной страницы или укажите ссылку на ваш официальный сайт.
            Кроме того, что в описании страницы необходимо указать официальный сайт, так же важно отметить и другие контакты, к которым пользователь сможет обратиться по тем или иным вопросам, касающимся продвигаемого продукта. Это может быть помощь при выборе товаров и услуг или консультацию по другим вопросам.""",

    """С аудиторией необходимо общение. Так они будут более заинтересованы в Вашем продукте. И будут знать, что получают его не от бездушной машины, а от реальных людей.
        И чтобы продвижение проектов было успешным, общение с клиентами – неизбежно. Для этого можно сделать следующее:
        • Создание охвата. Охват публикации растет за счет вовлеченности аудитории. Чтобы более активно привлекать внимание пользователя к продукту, необходимо как можно шире раскрывать материал.
        • Участвовать в обсуждениях и дискуссиях в других блогах, чтобы построить доверие среди аудитории и привлечь их на ресурс.
        • Сотрудничать с известными блогерами и влиятельными людьми среди аудитории и просить их оценивать продукт или услугу или оценить контент – это принесет много заинтересованных пользователей.
        • Не следует игнорировать вопросы и комментарии в блоге. Ответы на отзывы генерируют больше общения, тем самым люди становятся более заинтересованными в том, чтобы стать клиентами.
        """,

    """Чтобы понимать, насколько эффективна составленная стратегия, необходимо отслеживать и оценивать результаты проделанных действий.
    Отслеживать эффективность SMM-кампании можно в разделе статистики социальной сети, если имеется доступ к ней, или через отдельные мобильные приложения. Отслеживая необходимые показатели каждый день, можно заметить, в сторону прогресса или же регресса происходит продвижение продукта. Отслеживать стоит не только количество лайков, репостов, рост охватов аудитории, но и бизнес-показатели. Изменение количества транзакций, среднего чека и размера прибыли так же говорит об успешности стратегии продвижения.
    """



]
command_variants = [
    ["Да", "Нет"],
    ["Уже разобрался ", "Не знаю"],
    ["Уже выбрал ", "Еще не выбрал"],
    ["Определил – Это отлично! ", "Не знаю "],
    ["Расскажи  ", "Не интересно"],
    ["Да, конечно!  ", "Нет, спасибо"],
    ["Нет, дай пару советов", "Да"],
    ["Уже разобрался ", "Не вижу необходимости "],
    ["Да ", "Нет"],
    ["Да ", "Не знаю"],

]
question_key="question_key"
questions_size = len(questions)

def generate_keyboard(question_id):
    keyboard = [
        [InlineKeyboardButton(command_variants[question_id][0], callback_data=CALLBACK_GOOD),
         InlineKeyboardButton(command_variants[question_id][1], callback_data=CALLBACK_BAD)]
    ]

    return InlineKeyboardMarkup(keyboard)


def generate_go_keyboard():
    keyboard = [
        [InlineKeyboardButton("go", callback_data=CALLBACK_GOOD)]
    ]

    return InlineKeyboardMarkup(keyboard)


def send_question(context, chat_id):
    question_id = context.user_data[question_key] + 1
    if question_id == questions_size:
        send_answer(context, chat_id, "Спасибо, что были со мной!.\nВсегда рад подсказать интересующую вас информацию. Возвращайтесь, если что-то не понятно.")
        return
    context.user_data[question_key] = question_id
    context.bot.send_message(
        chat_id=chat_id,
        text=questions[question_id],
        reply_markup=generate_keyboard(question_id)
    )


def send_answer(context, chat_id, answer):
    context.bot.send_message(
        chat_id=chat_id,
        text=answer
    )


def keyboard_regulate(update: Update, context):
    query = update.callback_query
    current_callback = query.data

    chat_id = update.effective_message.chat_id

    query.edit_message_text(
        text=update.effective_message.text
    )
    current_ques_id = context.user_data[question_key]
    print(current_ques_id)
    if current_ques_id == -1:
        send_answer(context, chat_id, "goooooo")
        send_question(context, chat_id)
        return
    # if current_callback == CALLBACK_GOOD:
    #     context.bot.send_sticker(
    #         chat_id=chat_id1,
    #         sticker=GOOD_STICKER
    #     )

    if current_callback == CALLBACK_BAD:
        send_answer(context, chat_id, answers[current_ques_id])

    send_question(context, chat_id)


def hello(update: Update, context):
    context.bot.send_message(
        chat_id=update.effective_message.chat_id,
        text=update.effective_message.text
    )


def start(update: Update, context):
    user_name = update.effective_user.first_name
    context.user_data[question_key] = -1
    context.bot.send_message(
        chat_id=update.effective_message.chat_id,
        text=f"Привет, {user_name}!\nготовы ли вы получить рекомендацию?",
        reply_markup = generate_go_keyboard()
    )

def stop(update: Update, context):
    user_name = update.effective_user.first_name
    context.user_data[question_key] = -1
    context.bot.send_message(
        chat_id=update.effective_message.chat_id,
        text=f"Спасибо, {user_name}, что были со мной!.\nВсегда рад подсказать интересующую вас информацию. Возвращайтесь, если что-то не понятно.",
    )


def main():
    my_update = Updater(
        token=config.TOKEN,
        base_url=config.PROXY,
        use_context=True
    )

    keyboard_handler = CallbackQueryHandler(callback=keyboard_regulate, pass_chat_data=True)
    my_handler = MessageHandler(Filters.all, hello)
    start_handler = CommandHandler("start", start)
    stop_handler = CommandHandler("stop", stop)

    my_update.dispatcher.add_handler(start_handler)
    my_update.dispatcher.add_handler(stop_handler)
    my_update.dispatcher.add_handler(keyboard_handler)
    my_update.dispatcher.add_handler(my_handler)

    my_update.start_polling()

    my_update.idle()


if __name__ == "__main__":
    main()